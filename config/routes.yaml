openapi: 3.0.0
info:
  title: Unihub API
  description: \
    [Base Url: https://unihub-8im6.onrender.com/api/v1]
    
  version: 1.0.11
servers:
  - url: https://unihub-8im6.onrender.com/api/v1
  - url: http://localhost:3000/api/v1 
tags:
  - name: Users
    description: To add, get, edit, delete Users
  - name: Archives
    description: To add, get, delete Archives
  - name: Announcements
    description: To add, get, edit, delete Announcements

security:
  - bearerAuth: []

paths:
  /users/register:
    post:
      tags:
        - Users
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              example:
                token: yourAuthToken
        '400':
          description: Validation error
          content:
            application/json:
              example:
                message: Validation error

  /users/login:
    post:
      tags:
        - Users
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              example:
                token: yourAuthToken
        '400':
          description: Invalid email or password
          content:
            application/json:
              example:
                message: Invalid email or password
        '404':
          description: User does not exist
          content:
            application/json:
              example:
                message: User does not exist

  /users/me:
    get:
      tags:
        - Users
      summary: Get user information
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              example:
                _id: 652da908cd36a990884dbf65
                username: Your Name
                email: your@example.com
                role: user
                branch: cse
                createdAt: 2023-10-16T21:20:08.774+00:00
        '403':
          description: Unauthorized

  /users:
    get:
      tags:
        - Users
      summary: Get all users (admin access required)
      responses:
        '200':
          description: List of users
          content:
            application/json:
              example:
                - _id: 652da908cd36a990884dbf65
                  username: Your Name
                  email: your@example.com
                  role: user
                  branch: cse
                  createdAt: 2023-10-16T21:20:08.774+00:00

  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              example:
                name: Your Name
                email: your@example.com
                role: user
        '403':
          description: Unauthorized
        '404':
          description: User not found

    patch:
      tags:
        - Users
      summary: Update user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              example:
                name: Your New Name
                email: new@example.com
                role: user
        '403':
          description: Unauthorized
        '404':
          description: User not found

    delete:
      tags:
        - Users
      summary: Delete user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              example:
                message: User deleted
        '403':
          description: Unauthorized
        '404':
          description: User not found

  /announcements:
    get:
      tags:
        - Announcements
      summary: Get all announcements
      responses:
        '200':
          description: List of announcements
          content:
            application/json:
              example:
                - title: Announcement1
                  description: Description1
                  admin: adminId1
                  deadline: 2023-12-31T23:59:59Z
                  type: AnnouncementType1
                  branch: Branch1
                - title: Announcement2
                  description: Description2
                  admin: adminId2
                  deadline: 2023-12-31T23:59:59Z
                  type: AnnouncementType2
                  branch: Branch2
        '403':
          description: Unauthorized

    post:
      tags:
        - Announcements
      summary: Add a new announcement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement'
      responses:
        '201':
          description: Announcement added successfully
          content:
            application/json:
              example:
                message: Announcement added
        '400':
          description: Validation error
          content:
            application/json:
              example:
                message: Validation error
        '403':
          description: Unauthorized

  /announcements/{id}:
    patch:
      tags:
        - Announcements
      summary: Update an announcement by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementUpdate'
      responses:
        '200':
          description: Announcement updated successfully
          content:
            application/json:
              example:
                message: Announcement updated
        '400':
          description: Validation error
          content:
            application/json:
              example:
                message: Validation error
        '403':
          description: Unauthorized
        '404':
          description: Announcement not found

    delete:
      tags:
        - Announcements
      summary: Delete an announcement by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Announcement deleted successfully
          content:
            application/json:
              example:
                message: Announcement deleted
        '403':
          description: Unauthorized
        '404':
          description: Announcement not found

  /archives:
    post:
      tags:
        - Archives
      summary: Add an archive entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Archive'
      responses:
        '201':
          description: Archive entry added successfully
          content:
            application/json:
              example:
                message: Archive entry added
        '400':
          description: Validation error
          content:
            application/json:
              example:
                message: Validation error
        '403':
          description: Unauthorized

    get:
      tags:
        - Archives
      summary: Get all archive entries
      responses:
        '200':
          description: List of archive entries
          content:
            application/json:
              example:
                - user: userId1
                  announcement: announcementId1
                - user: userId2
                  announcement: announcementId2
        '403':
          description: Unauthorized

  /archives/{id}:
    delete:
      tags:
        - Archives
      summary: Delete an archive entry by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Archive entry deleted successfully
          content:
            application/json:
              example:
                message: Archive entry deleted
        '403':
          description: Unauthorized
        '404':
          description: Archive entry not found

components:
  schemas:
    UserRegistration:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string

    UserLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    UserUpdate:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string

    Archive:
      type: object
      properties:
        _id:
          type: string
          description: The unique identifier for the archive entry.
        user:
          type: string
          description: The ID of the user associated with the archive entry.
        announcement:
          type: string
          description: The ID of the announcement associated with the archive entry.
      required:
        - user
        - announcement

    Announcement:
      type: object
      properties:
        _id:
          type: string
          description: The unique identifier for the announcement.
        title:
          type: string
          description: The title of the announcement.
        description:
          type: string
          description: The description of the announcement.
        admin:
          type: string
          description: The ID of the admin (user) who created the announcement.
        deadline:
          type: string
          format: date-time
          description: The deadline for the announcement in ISO 8601 format.
        type:
          type: string
          description: The type of the announcement.
        branch:
          type: string
          enum:
            - apd
            - bce
            - bme
            - cer
            - che
            - chy
            - civ
            - cse
            - eee
            - ece
            - mst
            - mat
            - mec
            - met
            - min
            - phe
            - phy
            - all
          description: The branch associated with the announcement.
        createdAt:
          type: string
          format: date-time
          description: The date and time when the announcement was created in ISO 8601 format.

    AnnouncementUpdate:
      type: object
      properties:
        title:
          type: string
          description: The title of the announcement.
        description:
          type: string
          description: The description of the announcement.
        deadline:
          type: string
          format: date-time
          description: The deadline for the announcement in ISO 8601 format.
        type:
          type: string
          description: The type of the announcement.
        branch:
          type: string
          enum:
            - apd
            - bce
            - bme
            - cer
            - che
            - chy
            - civ
            - cse
            - eee
            - ece
            - mst
            - mat
            - mec
            - met
            - min
            - phe
            - phy
            - all
          description: The branch associated with the announcement.
        createdAt:
          type: string
          format: date-time
          description: The date and time when the announcement was created in ISO 8601 format.
  
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

